#+title: Remotes
#+description: Practice
#+colordes: #dc7309
#+slug: git-13-remotes
#+weight: 14

Remotes are instances of a repository on a network, on the web, on external drives... Departmental servers, USB keys, and version control repository hosting services like [[https://github.com/][GitHub]], [[https://about.gitlab.com/][GitLab]], or [[https://bitbucket.org/][Bitbucket]] can all serve as remotes.

In this course, we will use [[https://github.com/][GitHub]] as the host for our remotes. If you haven't yet done so, [[https://westgrid-cli.netlify.app/school/git-03-install.html#headline-4][create a free GitHub account]].

* Creating a project on GitHub

Your project ({{<b>}}git_lesson{{</b>}}), though under version control, for now only resides on your computer. If you want to collaborate with others, having a remote on the web is really convenient.

Go to your GitHub account webpage, select the {{<b>}}Repositories{{</b>}} tab, then click the green {{<b>}}New{{</b>}} button.

Enter the name of your repo, avoiding spaces. It can be the name you had on your computer (it would be sensible and make things less confusing), but it doesn't have to be.

You can make your repository public or private. In a real scenario, you would make it private if it contained sensitive information (e.g. unpublished research) or public if you wanted to make it available to others or to develop an open source project.

Here, we will go with the public option because, while GitHub free accounts allow private repositories, not all team options are available on private repositories for free accounts.

Now, you have this empty repository on GitHub, but it is not connected to your local repository. So let's go back to our local repository (so back to Git Bash or your terminal).

* Managing remotes

** List remotes

To list the remotes associated with your project, run:

#+BEGIN_src sh
git remote
#+END_src

And to see their address:

#+BEGIN_src sh
git remote -v
#+END_src

Since we haven't added any remote yet, this should not return anything.

** Add remote

This is how you can add a remote:

#+BEGIN_example
git remote add <remote-name> <remote-address>
#+END_example

{{<b>}}&lt;remote-name&gt;{{</b>}} is the name you give to your remote. Usually, the name {{<c>}}origin{{</c>}} is used.

{{<b>}}&lt;remote-address&gt;{{</b>}} is the address of your remote in the https form or—[[https://westgrid-cli.netlify.app/school/git-03-install.html#headline-5][if you have set SSH for your GitHub account]]—the SSH form.

/Example (using an SSH address):/

#+BEGIN_SRC sh
git remote add origin git@github.com:user/project.git
#+END_SRC

{{<exercise>}}
Let's add a remote to our {{<b>}}git_lesson{{</b>}} project.
{{</exercise>}}




** Rename remote

You can rename a remote with:

#+BEGIN_example
git remote rename <old-remote-name> <new-remote-name>
#+END_example

** Remove remote

And you can delete a remote with:

#+BEGIN_example
git remote remove <remote-name>
#+END_example

* Working with remotes

** Fetching

#+BEGIN_example
git fetch <remote-name>
#+END_example

/Example:/

#+BEGIN_src sh
git fetch origin
#+END_src

** Pulling


** Pushing

#+BEGIN_example
git push <remote-name> <branch-name>
#+END_example

/Example:/

#+BEGIN_src sh
git push origin master
#+END_src


#+BEGIN_src sh
git push --set-upstream origin master
#+END_src

* Comments & questions
