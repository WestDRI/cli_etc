#+title: Collaborating through Git
#+subtitle: Example using GitHub as a remote
#+topic: Git
#+slug: git-collab

**** /Abstract/

#+BEGIN_definition
Git is a powerful version control system allowing to record, access, and restore the history of projects.

After setting up remotes on the internet or other network, Git is also a mighty collaboration tool.

In this workshop, we will use the popular online hosting site GitHub to practice a collaboration workflow typical of research teams.
#+END_definition

**** /Software requirements/

#+BEGIN_box
*1 - Properly configured Git*

{{<n>}}{{<n>}}You can download Git [[https://gitforwindows.org/][here]]  if you are on Windows and [[https://git-scm.com/downloads][here]] if you use MacOS or Linux.

{{<n>}}{{<n>}}These minimum configurations [[https://westgrid-cli.netlify.app/school/git-03-install/#headline-3][should be set properly]]: \\
{{<n>}}{{<n>}}{{<n>}}{{<n>}}- your user name \\
{{<n>}}{{<n>}}{{<n>}}{{<n>}}- your email address \\
{{<n>}}{{<n>}}{{<n>}}{{<n>}}- your preferred text editor \\
{{<n>}}{{<n>}}{{<n>}}{{<n>}}- the end of line formatting matching your operating system
{{<2br>}}
*2 - GitHub account*

{{<n>}}{{<n>}}A free [[https://github.com/join?plan=free&source=pricing-card-free][GitHub account]].

{{<n>}}{{<n>}}(Optional) If you don't want to type your password all the time, [[https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh][set SSH for your account]].
#+END_box

**** /Prerequisites/

#+BEGIN_simplebox
*Basic knowledge of Git*: \\
{{<n>}}{{<n>}}- familiarity with the concept of staging area, \\
{{<n>}}{{<n>}}- experience (even if limited) with staging and committing.
#+END_simplebox

* Cloning a GitHub repository

When you want to collaborate on a pre-existing project, the first thing you need to do is to clone it to have a local copy on your machine.

First, navigate to the directory in which you want to clone the project:

#+BEGIN_src sh
cd /place/where/you/want/to/have/your/project
#+END_src

Then, clone the project.

For this workshop, we will use [[https://github.com/prosoitos/git_workshop_collab][this project]].

There are 2 ways to do this. If you have [[https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh][set SSH for your account]], the command is:

#+BEGIN_src sh
git clone git@github.com:<user>/<repo>.git
#+END_src

In our case, this is:

#+BEGIN_src sh
git clone git@github.com:prosoitos/git_workshop_collab.git
#+END_src

If you haven't set SSH for your account, use the HTTPS address and enter your GitHub user name and password when prompted. The general command looks like this:

#+BEGIN_src sh
git clone https://github.com/<user>/<repo>.git
#+END_src

With our project:

#+BEGIN_src sh
git clone https://github.com/prosoitos/git_workshop_collab.git
#+END_src

Note that, if you want to give your copy of the project a different name, you can clone it with either of:

#+BEGIN_src sh
git clone git@github.com:<user>/<repo>.git <name-of-your-copy>
git clone https://github.com/<user>/<repo>.git <name-of-your-copy>
#+END_src

The copy on GitHub is the central copyâ€”the one allowing various team members to work jointly on the same project. But you now have a copy of it (as well as its entire history) on your machine. Your collaborators have their own clones on their own machines.

